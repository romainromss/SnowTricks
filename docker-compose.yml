version: "3.1"

services:
    # Core configuration
    php-fpm:
        container_name: ${CONTAINER_NAME}_php-fpm
        build: .
        environment:
          BLACKFIRE_SERVER_ID: '${BLACKFIRE_SERVER_ID}'
          BLACKFIRE_SERVER_TOKEN: '${BLACKFIRE_SERVER_TOKEN}'
        ports:
            - '${PHP_PORT}:9000'
        volumes:
            - './:${WORKPATH}:rw,cached'
            - './docker/php/conf/php.ini:/usr/local/etc/php/php.ini'
            # - './docker/php/conf/production/php.ini:/usr/local/etc/php/php.ini' -> Used for production.
        restart: always

    nginx:
        container_name: ${CONTAINER_NAME}_nginx
        image: nginx
        ports:
            - '${NGINX_PORT}:80'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw'
            - './docker/nginx/conf/core/core.conf:/etc/nginx/conf/nginx.conf:ro'
            - './docker/nginx/conf/development:/etc/nginx/conf.d:ro'
            # - './docker/nginx/conf/production:/etc/nginx/conf.d:ro' -> Uncomment this line for production.
            - './docker/nginx/logs/:/var/log/nginx'
        restart: always

    # Frontend configuration
    node:
        container_name: ${CONTAINER_NAME}_nodejs
        build: './docker/node'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw'
        # command: bash -c "yarn && yarn build" -> Uncomment for production.
        restart: always

    # Server optimization
    varnish:
        container_name: ${CONTAINER_NAME}_varnish
        build: './docker/varnish'
        volumes:
            - './docker/varnish/conf:/etc/varnish:rw'
        ports:
            - '${VARNISH_PORT}:83'
        depends_on:
            - nginx
        restart: always

    redis:
          container_name: ${CONTAINER_NAME}_redis
          image: redis:alpine
          ports:
            - '${REDIS_PORT}:6379'
          links:
            - php-fpm
          restart: always

    # DB configuration
    postgresql:
        container_name: ${CONTAINER_NAME}_postgresql
        image: postgres:9.6
        environment:
            POSTGRES_DB: '${POSTGRES_DB}'
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - 'db-data:/var/lib/postgresql/data:rw'
        restart: always

    # Performances configuration
    blackfire:
        container_name: ${CONTAINER_NAME}_blackfire
        image: blackfire/blackfire
        environment:
            BLACKFIRE_SERVER_ID: '${BLACKFIRE_SERVER_ID}'
            BLACKFIRE_SERVER_TOKEN: '${BLACKFIRE_SERVER_TOKEN}'
            BLACKFIRE_CLIENT_ID: '${BLACKFIRE_CLIENT_ID}'
            BLACKFIRE_CLIENT_TOKEN: '${BLACKFIRE_CLIENT_TOKEN}'
        links:
            - php-fpm
        volumes:
            - './:${WORKPATH}:rw'
        restart: always

volumes:
    db-data: {}